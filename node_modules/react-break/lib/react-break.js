'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.layoutGenerator = undefined;

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _breakjs = require('breakjs');

var _breakjs2 = _interopRequireDefault(_breakjs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var breakJsMethodMap = {
  is: 'is',
  isAtLeast: 'atLeast',
  isAtMost: 'atMost'
};

function getMethodFromLayout(layout, methodName) {
  return layout[breakJsMethodMap[methodName]];
}

var Break = function (_PureComponent) {
  (0, _inherits3.default)(Break, _PureComponent);

  function Break() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, Break);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Break.__proto__ || (0, _getPrototypeOf2.default)(Break)).call.apply(_ref, [this].concat(args))), _this), _this.state = { layout: (0, _breakjs2.default)(_this.props.breakpoints) }, _this.onLayoutChange = function () {
      if (_this.mounted) {
        _this.forceUpdate();
      }
    }, _this.mounted = false, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(Break, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.mounted = true;
      this.onBreakpointsChange();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.mounted = false;
      this.state.layout.removeChangeListener(this.onLayoutChange);
    }
  }, {
    key: 'onBreakpointsChange',
    value: function onBreakpointsChange() {
      if (this.mounted) {
        this.setState({ layout: (0, _breakjs2.default)(this.props.breakpoints) });
        this.state.layout.removeChangeListener(this.onLayoutChange);
        this.state.layout.addChangeListener(this.onLayoutChange);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          breakpoints = _props.breakpoints,
          children = _props.children,
          query = _props.query,
          style = _props.style,
          forceWrap = _props.forceWrap,
          rest = (0, _objectWithoutProperties3.default)(_props, ['breakpoints', 'children', 'query', 'style', 'forceWrap']);
      var layout = this.state.layout;


      var breakpoint = query.breakpoint;

      if (!getMethodFromLayout(layout, query.method)(breakpoint)) {
        return null;
      }

      var classes = 'react-break react-break--' + query.method + '-' + query.breakpoint;
      var shouldBeWrapped = forceWrap || _react2.default.Children.count(children) > 1 || (typeof children === 'undefined' ? 'undefined' : (0, _typeof3.default)(children)) !== 'object';

      return shouldBeWrapped ? _react2.default.createElement(
        'div',
        (0, _extends3.default)({ className: classes, style: style }, rest),
        children
      ) : children;
    }
  }]);
  return Break;
}(_react.PureComponent);

Break.propTypes = {
  breakpoints: _propTypes2.default.object.isRequired,
  children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),
  className: _propTypes2.default.string,
  forceWrap: _propTypes2.default.bool,
  query: _propTypes2.default.shape({
    method: _propTypes2.default.oneOf((0, _keys2.default)(breakJsMethodMap)),
    breakpoint: _propTypes2.default.string.isRequired
  }),
  style: _propTypes2.default.object
};


var layoutGenerator = function componentGenerator(breakpoints) {
  function createComponent(method, breakpoint) {
    var _class, _temp2;

    if (!(0, _keys2.default)(breakpoints).includes(breakpoint)) {
      throw new Error('Invalid breakpoint name \'' + breakpoint + '\'' + '(not defined in layout).');
    }

    return _temp2 = _class = function (_PureComponent2) {
      (0, _inherits3.default)(Layout, _PureComponent2);

      function Layout() {
        (0, _classCallCheck3.default)(this, Layout);
        return (0, _possibleConstructorReturn3.default)(this, (Layout.__proto__ || (0, _getPrototypeOf2.default)(Layout)).apply(this, arguments));
      }

      (0, _createClass3.default)(Layout, [{
        key: 'render',
        value: function render() {
          var children = this.props.children;


          return children ? _react2.default.createElement(
            Break,
            (0, _extends3.default)({}, this.props, {
              breakpoints: breakpoints,
              query: { method: method, breakpoint: breakpoint } }),
            children
          ) : null;
        }
      }]);
      return Layout;
    }(_react.PureComponent), _class.propTypes = {
      children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node])
    }, _temp2;
  }

  return {
    is: function is(breakpoint) {
      return createComponent('is', breakpoint);
    },
    isAtLeast: function isAtLeast(breakpoint) {
      return createComponent('isAtLeast', breakpoint);
    },
    isAtMost: function isAtMost(breakpoint) {
      return createComponent('isAtMost', breakpoint);
    }
  };
};

exports.layoutGenerator = layoutGenerator;
exports.default = Break;