{"ast":null,"code":"var _jsxFileName = \"/home/can/IdeaProjects/devRep/src/PersonelScreens/StickyHeadTable.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Button } from \"react-bootstrap\";\nconst columns = [{\n  id: 'name',\n  label: 'İzin ID',\n  display: \"flex\",\n  justifyContent: \"flex-start\"\n}, {\n  id: 'code',\n  label: 'İzin Talep Tarihi',\n  display: \"flex\",\n  justifyContent: \"flex-start\"\n}, {\n  id: 'population',\n  label: 'İzin Başlangıç',\n  display: \"flex\",\n  justifyContent: \"flex-start\"\n}, {\n  id: 'size',\n  label: 'İzin Bitiş',\n  display: \"flex\",\n  justifyContent: \"flex-start\"\n}, {\n  id: 'chiefAcception',\n  label: 'Amir Onayı',\n  display: \"flex\",\n  justifyContent: \"flex-start\"\n}, {\n  id: 'bossAcception',\n  label: 'Genel Müdür Onayı',\n  display: \"flex\",\n  justifyContent: \"flex-start\"\n}, {\n  id: 'display',\n  label: 'Önizleme',\n  display: \"flex\",\n  justifyContent: \"flex-start\"\n}];\n\nfunction btnReturner() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"MRB\"));\n}\n\nfunction createData(name, code, population, size) {\n  return name, code, population, size;\n}\n\nconst rows = [createData('China', 'CN', \"22/22/2222\", \"22/22/2222\"), createData('China', 'CN1', \"22/22/2222\", \"22/22/2222\"), createData('China', 'CN2', \"22/22/2222\", \"22/22/2222\"), createData('China', 'CN3', \"22/22/2222\", \"22/22/2222\"), createData('China', 'CN4', \"22/22/2222\", \"22/22/2222\"), createData('China', 'CN5', \"22/22/2222\", \"22/22/2222\"), createData('China', 'CN6', \"22/22/2222\", \"22/22/2222\"), createData('China', 'CN7', \"22/22/2222\", \"22/22/2222\"), createData('China', 'CN8', \"22/22/2222\", \"22/22/2222\"), v];\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: 440\n  }\n});\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n    key: column.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 33\n    }\n  }, column.label)))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 33\n      }\n    }, columns.map(column => {\n      const value = row[column.id];\n      return /*#__PURE__*/React.createElement(TableCell, {\n        key: column.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 45\n        }\n      }, value);\n    }));\n  })))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/can/IdeaProjects/devRep/src/PersonelScreens/StickyHeadTable.js"],"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Button","columns","id","label","display","justifyContent","btnReturner","createData","name","code","population","size","rows","v","useStyles","root","width","container","maxHeight","StickyHeadTable","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","map","column","slice","row","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAAQC,MAAR,QAAqB,iBAArB;AAEA,MAAMC,OAAO,GAAG,CACZ;AAAEC,EAAAA,EAAE,EAAE,MAAN;AAAcC,EAAAA,KAAK,EAAE,SAArB;AAAgCC,EAAAA,OAAO,EAAE,MAAzC;AAAiDC,EAAAA,cAAc,EAAC;AAAhE,CADY,EAGZ;AAAEH,EAAAA,EAAE,EAAE,MAAN;AAAcC,EAAAA,KAAK,EAAE,mBAArB;AAA2CC,EAAAA,OAAO,EAAE,MAApD;AAA4DC,EAAAA,cAAc,EAAE;AAA5E,CAHY,EAIZ;AACIH,EAAAA,EAAE,EAAE,YADR;AAEIC,EAAAA,KAAK,EAAE,gBAFX;AAIIC,EAAAA,OAAO,EAAC,MAJZ;AAKIC,EAAAA,cAAc,EAAC;AALnB,CAJY,EAWZ;AACIH,EAAAA,EAAE,EAAE,MADR;AAEIC,EAAAA,KAAK,EAAE,YAFX;AAGIC,EAAAA,OAAO,EAAE,MAHb;AAIIC,EAAAA,cAAc,EAAE;AAJpB,CAXY,EAiBZ;AACIH,EAAAA,EAAE,EAAE,gBADR;AAEIC,EAAAA,KAAK,EAAE,YAFX;AAGIC,EAAAA,OAAO,EAAE,MAHb;AAIIC,EAAAA,cAAc,EAAE;AAJpB,CAjBY,EAuBZ;AACIH,EAAAA,EAAE,EAAE,eADR;AAEIC,EAAAA,KAAK,EAAE,mBAFX;AAGIC,EAAAA,OAAO,EAAE,MAHb;AAIIC,EAAAA,cAAc,EAAE;AAJpB,CAvBY,EA6BZ;AACIH,EAAAA,EAAE,EAAE,SADR;AAEIC,EAAAA,KAAK,EAAE,UAFX;AAGIC,EAAAA,OAAO,EAAE,MAHb;AAIIC,EAAAA,cAAc,EAAE;AAJpB,CA7BY,CAAhB;;AAoCA,SAASC,WAAT,GAAuB;AACnB,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,CADJ;AAQH;;AAED,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,UAAhC,EAA4CC,IAA5C,EAAkD;AAC9C,SAAQH,IAAI,EAAEC,IAAF,EAAQC,UAAR,EAAoBC,IAAhC;AACH;;AAGD,MAAMC,IAAI,GAAG,CACTL,UAAU,CAAC,OAAD,EAAU,IAAV,EAAgB,YAAhB,EAA8B,YAA9B,CADD,EAETA,UAAU,CAAC,OAAD,EAAU,KAAV,EAAiB,YAAjB,EAA+B,YAA/B,CAFD,EAGTA,UAAU,CAAC,OAAD,EAAU,KAAV,EAAiB,YAAjB,EAA+B,YAA/B,CAHD,EAITA,UAAU,CAAC,OAAD,EAAU,KAAV,EAAiB,YAAjB,EAA+B,YAA/B,CAJD,EAKTA,UAAU,CAAC,OAAD,EAAU,KAAV,EAAiB,YAAjB,EAA+B,YAA/B,CALD,EAMTA,UAAU,CAAC,OAAD,EAAU,KAAV,EAAiB,YAAjB,EAA+B,YAA/B,CAND,EAOTA,UAAU,CAAC,OAAD,EAAU,KAAV,EAAiB,YAAjB,EAA+B,YAA/B,CAPD,EAQTA,UAAU,CAAC,OAAD,EAAU,KAAV,EAAiB,YAAjB,EAA+B,YAA/B,CARD,EASTA,UAAU,CAAC,OAAD,EAAU,KAAV,EAAiB,YAAjB,EAA+B,YAA/B,CATD,EAUTM,CAVS,CAAb;AAcA,MAAMC,SAAS,GAAGvB,UAAU,CAAC;AACzBwB,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE;AADL,GADmB;AAIzBC,EAAAA,SAAS,EAAE;AACPC,IAAAA,SAAS,EAAE;AADJ;AAJc,CAAD,CAA5B;AASA,eAAe,SAASC,eAAT,GAA2B;AACtC,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBhC,KAAK,CAACiC,QAAN,CAAe,CAAf,CAAxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCnC,KAAK,CAACiC,QAAN,CAAe,EAAf,CAAtC;;AAEA,QAAMG,gBAAgB,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACzCN,IAAAA,OAAO,CAACM,OAAD,CAAP;AACH,GAFD;;AAIA,QAAMC,uBAAuB,GAAIF,KAAD,IAAW;AACvCF,IAAAA,cAAc,CAAC,CAACE,KAAK,CAACG,MAAN,CAAaC,KAAf,CAAd;AACAT,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAHD;;AAKA,sBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEF,OAAO,CAACL,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAEK,OAAO,CAACH,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,YAAY,MAAnB;AAAoB,kBAAW,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhB,OAAO,CAAC+B,GAAR,CAAaC,MAAD,iBACT,oBAAC,SAAD;AACI,IAAA,GAAG,EAAEA,MAAM,CAAC/B,EADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGK+B,MAAM,CAAC9B,KAHZ,CADH,CADL,CADJ,CADJ,eAYI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKS,IAAI,CAACsB,KAAL,CAAWb,IAAI,GAAGG,WAAlB,EAA+BH,IAAI,GAAGG,WAAP,GAAqBA,WAApD,EAAiEQ,GAAjE,CAAsEG,GAAD,IAAS;AAC3E,wBACI,oBAAC,QAAD;AAAU,MAAA,KAAK,MAAf;AAAgB,MAAA,IAAI,EAAC,UAArB;AAAgC,MAAA,QAAQ,EAAE,CAAC,CAA3C;AAA8C,MAAA,GAAG,EAAEA,GAAG,CAAC1B,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKR,OAAO,CAAC+B,GAAR,CAAaC,MAAD,IAAY;AACrB,YAAMF,KAAK,GAAGI,GAAG,CAACF,MAAM,CAAC/B,EAAR,CAAjB;AACA,0BAEI,oBAAC,SAAD;AAAW,QAAA,GAAG,EAAE+B,MAAM,CAAC/B,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK6B,KADL,CAFJ;AAOH,KATA,CADL,CADJ;AAcH,GAfA,CADL,CAZJ,CADJ,CADJ,eAkCI,oBAAC,eAAD;AACI,IAAA,kBAAkB,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,CADxB;AAEI,IAAA,SAAS,EAAC,KAFd;AAGI,IAAA,KAAK,EAAEnB,IAAI,CAACwB,MAHhB;AAII,IAAA,WAAW,EAAEZ,WAJjB;AAKI,IAAA,IAAI,EAAEH,IALV;AAMI,IAAA,YAAY,EAAEK,gBANlB;AAOI,IAAA,mBAAmB,EAAEG,uBAPzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCJ,CADJ;AA8CH","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Button} from \"react-bootstrap\";\n\nconst columns = [\n    { id: 'name', label: 'İzin ID', display: \"flex\" ,justifyContent:\"flex-start\"\n    },\n    { id: 'code', label: 'İzin Talep Tarihi',  display: \"flex\" ,justifyContent: \"flex-start\"},\n    {\n        id: 'population',\n        label: 'İzin Başlangıç',\n\n        display:\"flex\",\n        justifyContent:\"flex-start\",\n    },\n    {\n        id: 'size',\n        label: 'İzin Bitiş',\n        display: \"flex\",\n        justifyContent: \"flex-start\"\n    },\n    {\n        id: 'chiefAcception',\n        label: 'Amir Onayı',\n        display: \"flex\",\n        justifyContent: \"flex-start\"\n    },\n    {\n        id: 'bossAcception',\n        label: 'Genel Müdür Onayı',\n        display: \"flex\",\n        justifyContent: \"flex-start\"\n    },\n    {\n        id: 'display',\n        label: 'Önizleme',\n        display: \"flex\",\n        justifyContent: \"flex-start\"\n    },\n];\nfunction btnReturner() {\n    return(\n        <div>\n            <Button>\n                MRB\n            </Button>\n        </div>\n    )\n\n}\n\nfunction createData(name, code, population, size) {\n    return (name, code, population, size)\n}\n\n\nconst rows = [\n    createData('China', 'CN', \"22/22/2222\", \"22/22/2222\"),\n    createData('China', 'CN1', \"22/22/2222\", \"22/22/2222\"),\n    createData('China', 'CN2', \"22/22/2222\", \"22/22/2222\"),\n    createData('China', 'CN3', \"22/22/2222\", \"22/22/2222\"),\n    createData('China', 'CN4', \"22/22/2222\", \"22/22/2222\"),\n    createData('China', 'CN5', \"22/22/2222\", \"22/22/2222\"),\n    createData('China', 'CN6', \"22/22/2222\", \"22/22/2222\"),\n    createData('China', 'CN7', \"22/22/2222\", \"22/22/2222\"),\n    createData('China', 'CN8', \"22/22/2222\", \"22/22/2222\"),\n    v\n\n];\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n    },\n    container: {\n        maxHeight: 440,\n    },\n});\n\nexport default function StickyHeadTable() {\n    const classes = useStyles();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    return (\n        <Paper className={classes.root}>\n            <TableContainer className={classes.container}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                        <TableRow>\n                            {columns.map((column) => (\n                                <TableCell\n                                    key={column.id}\n                                >\n                                    {column.label}\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                            return (\n                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                                    {columns.map((column) => {\n                                        const value = row[column.id];\n                                        return (\n\n                                            <TableCell key={column.id}>\n                                                {value}\n                                            </TableCell>\n\n                                        );\n                                    })}\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[10, 25, 100]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n        </Paper>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}