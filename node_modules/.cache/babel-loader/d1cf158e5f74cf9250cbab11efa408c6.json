{"ast":null,"code":"var _jsxFileName = \"/home/can/IdeaProjects/devRep/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport allReducers from \"./reducers\";\n{\n  /*\n     This class takes <App/> component as a whole component of the program within <Provider/> component.\n     That allows to reach whole redux states from everywhere.\n      Store element created here to work with redux as well.\n  \n  */\n}\n{\n  /*\n     This element includes enhancer parameter as well.This is a chrome extension that allows to\n     programmer display states current values etc.Shorty,just an tool that makes easier to implement\n     redux.\n  */\n}\nconst myStore = createStore(allReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n{\n  /*\n     Here the reactDOM element and its definition by Id \"root\" that given in html tag in index.html .\n  */\n}\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: myStore,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 43\n  }\n})), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/can/IdeaProjects/devRep/src/index.js"],"names":["React","ReactDOM","App","createStore","Provider","allReducers","myStore","window","__REDUX_DEVTOOLS_EXTENSION__","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,sCAAP;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA;AAAC;;;;;;AAOE;AAEH;AAAC;;;;;AAKE;AAEH,MAAMC,OAAO,GAAGH,WAAW,CAACE,WAAD,EAC1BE,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EADb,CAA3B;AAIA;AAAC;;;AAEE;AACHP,QAAQ,CAACQ,MAAT,eAAgB,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEH,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA0B,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA1B,CAAhB,EAA4DI,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA5D","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport allReducers from \"./reducers\";\n{/*\n    This class takes <App/> component as a whole component of the program within <Provider/> component.\n    That allows to reach whole redux states from everywhere.\n\n    Store element created here to work with redux as well.\n\n\n*/}\n\n{/*\n    This element includes enhancer parameter as well.This is a chrome extension that allows to\n    programmer display states current values etc.Shorty,just an tool that makes easier to implement\n    redux.\n\n*/}\n\nconst myStore = createStore(allReducers\n,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\n{/*\n    Here the reactDOM element and its definition by Id \"root\" that given in html tag in index.html .\n*/}\nReactDOM.render(<Provider store={myStore}><App/></Provider>,document.getElementById(\"root\"))\n"]},"metadata":{},"sourceType":"module"}