{"ast":null,"code":"var _jsxFileName = \"/home/can/IdeaProjects/devRep/src/PersonelScreens/ResponsiveDialog.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Link } from \"react-router-dom\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from '@material-ui/icons/Add';\nexport default function ResponsiveDialog(props, desParam) {\n  if (desParam === \"1\") {\n    const [open, setOpen] = React.useState(false);\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    const handleCloseAndDeleteDemand = () => {\n      setOpen(false); //HERE WE DELETE THE DEMAND OF PERMISSION.\n    };\n\n    if (props.chiefConfirmStatus === 1) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          width: \"80px\",\n          justifyContent: \"center\",\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        style: {\n          backgroundColor: \"rgba(49,236,9,0.95)\",\n          fontSize: \"20px\",\n          borderRadius: \"50%\",\n          margin: \"auto\",\n          textAlign: \"center\",\n          width: \"40px\"\n        },\n        onClick: handleClickOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, \"\\u2714\"), /*#__PURE__*/React.createElement(Dialog, {\n        fullScreen: fullScreen,\n        open: open,\n        onClose: handleClose,\n        \"aria-labelledby\": \"responsive-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        id: \"responsive-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, \"AÇIKLAMA\"), /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(DialogContentText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }\n      }, props.explanationOfChief, props.explanationOfGeneralManager)), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        autoFocus: true,\n        onClick: handleClose,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }\n      }, \"TAMAM\"))));\n    } else if (props.chiefConfirmStatus === 2) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          width: \"80px\",\n          justifyContent: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        style: {\n          backgroundColor: \"rgba(220,16,16,0.95)\",\n          borderRadius: \"50%\",\n          margin: \"auto\",\n          textAlign: \"center\",\n          display: 'flex',\n          width: \"40px\"\n        },\n        onClick: handleClickOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        style: {\n          fontSize: \"20px\",\n          margin: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }\n      }, \"\\u2716\")), /*#__PURE__*/React.createElement(Dialog, {\n        fullScreen: fullScreen,\n        open: open,\n        onClose: handleClose,\n        \"aria-labelledby\": \"responsive-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        id: \"responsive-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }\n      }, \"AÇIKLAMA\"), /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(DialogContentText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }\n      }, props.explanationOfChief)), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        autoFocus: true,\n        onClick: handleClose,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }\n      }, \"TAMAM\"))));\n    } else if (props.chiefConfirmStatus === 3) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          width: \"80px\",\n          justifyContent: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        style: {\n          backgroundColor: \"rgba(255,220,0,0.95)\",\n          fontSize: \"20px\",\n          borderRadius: \"50%\",\n          margin: \"auto\",\n          textAlign: \"center\",\n          width: \"40px\"\n        },\n        onClick: handleClickOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        style: {\n          fontSize: \"20px\",\n          margin: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }\n      }, \"\\u2296\")), /*#__PURE__*/React.createElement(Dialog, {\n        fullScreen: fullScreen,\n        open: open,\n        onClose: handleClose,\n        \"aria-labelledby\": \"responsive-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        id: \"responsive-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }\n      }, \"AÇIKLAMA\"), /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(DialogContentText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 29\n        }\n      }, props.explanationOfChief)), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        autoFocus: true,\n        onClick: handleClose,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }\n      }, \"TAMAM\"))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          width: \"80px\",\n          justifyContent: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        style: {\n          backgroundColor: \"rgb(253,131,1)\",\n          fontSize: \"20px\",\n          borderRadius: \"50%\",\n          margin: \"auto\",\n          textAlign: \"center\",\n          width: \"40px\"\n        },\n        onClick: handleClickOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        style: {\n          fontSize: \"20px\",\n          margin: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }\n      }, \"!\")), /*#__PURE__*/React.createElement(Dialog, {\n        fullScreen: fullScreen,\n        open: open,\n        onClose: handleClose,\n        \"aria-labelledby\": \"responsive-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        id: \"responsive-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }\n      }, \"AÇIKLAMA\"), /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(DialogContentText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 29\n        }\n      }, props.explanationOfChief)), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        autoFocus: true,\n        onClick: handleCloseAndDeleteDemand,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 29\n        }\n      }, \"\\u0130PTAL ET\"), /*#__PURE__*/React.createElement(Link, {\n        to: \"./FillingThePermissionForm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        autoFocus: true,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 33\n        }\n      }, \"D\\xDCZENLE\")))));\n    }\n  } else if (desParam === \"2\") {}\n}","map":{"version":3,"sources":["/home/can/IdeaProjects/devRep/src/PersonelScreens/ResponsiveDialog.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","useTheme","Link","Fab","AddIcon","ResponsiveDialog","props","desParam","open","setOpen","useState","theme","fullScreen","breakpoints","down","handleClickOpen","handleClose","handleCloseAndDeleteDemand","chiefConfirmStatus","display","width","justifyContent","textAlign","backgroundColor","fontSize","borderRadius","margin","explanationOfChief","explanationOfGeneralManager"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport {Link} from \"react-router-dom\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from '@material-ui/icons/Add';\n\nexport default function ResponsiveDialog(props,desParam) {\n    if(desParam===\"1\") {\n        const [open, setOpen] = React.useState(false);\n        const theme = useTheme();\n        const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n        const handleClickOpen = () => {\n            setOpen(true);\n        };\n\n        const handleClose = () => {\n            setOpen(false);\n        };\n        const handleCloseAndDeleteDemand = () => {\n            setOpen(false);\n            //HERE WE DELETE THE DEMAND OF PERMISSION.\n        };\n\n        if (props.chiefConfirmStatus === 1) {\n\n            return (\n                <div style={{\n                    display: \"flex\", width: \"80px\", justifyContent: \"center\",\n                    textAlign: \"center\"\n\n                }}>\n\n                    <button style={{\n                        backgroundColor: \"rgba(49,236,9,0.95)\",\n                        fontSize: \"20px\",\n                        borderRadius: \"50%\",\n                        margin: \"auto\",\n                        textAlign: \"center\",\n                        width: \"40px\",\n                    }}\n                            onClick={handleClickOpen}>\n                        ✔\n                    </button>\n                    <Dialog\n                        fullScreen={fullScreen}\n                        open={open}\n                        onClose={handleClose}\n                        aria-labelledby=\"responsive-dialog-title\"\n                    >\n                        <DialogTitle id=\"responsive-dialog-title\">{\"AÇIKLAMA\"}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                {props.explanationOfChief}\n                                {props.explanationOfGeneralManager}\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button autoFocus onClick={handleClose} color=\"primary\">\n                                TAMAM\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                </div>\n            )\n        } else if (props.chiefConfirmStatus === 2) {\n            return (\n                <div style={{\n                    display: \"flex\", width: \"80px\", justifyContent: \"center\"\n                }}>\n                    <button style={{\n                        backgroundColor: \"rgba(220,16,16,0.95)\",\n\n                        borderRadius: \"50%\",\n                        margin: \"auto\",\n                        textAlign: \"center\",\n                        display: 'flex',\n                        width: \"40px\"\n                    }} onClick={handleClickOpen}>\n                        <h1 style={{fontSize: \"20px\", margin: \"auto\"}}>\n                            ✖\n                        </h1>\n\n                    </button>\n                    <Dialog\n                        fullScreen={fullScreen}\n                        open={open}\n                        onClose={handleClose}\n                        aria-labelledby=\"responsive-dialog-title\"\n                    >\n                        <DialogTitle id=\"responsive-dialog-title\">{\"AÇIKLAMA\"}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                {props.explanationOfChief}\n                                {/* {props.explanationOfGeneralManager}*/}\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button autoFocus onClick={handleClose} color=\"primary\">\n                                TAMAM\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                </div>\n            )\n        } else if (props.chiefConfirmStatus === 3) {\n            return (\n                <div style={{\n                    display: \"flex\",\n                    width: \"80px\",\n                    justifyContent: \"center\"\n                }}>\n                    <button style={{\n                        backgroundColor: \"rgba(255,220,0,0.95)\",\n                        fontSize: \"20px\",\n                        borderRadius: \"50%\",\n                        margin: \"auto\",\n                        textAlign: \"center\",\n                        width: \"40px\"\n                    }} onClick={handleClickOpen}\n                    >\n                        <h1 style={{fontSize: \"20px\", margin: \"auto\"}}>\n                            ⊖\n                        </h1>\n                    </button>\n                    <Dialog\n                        fullScreen={fullScreen}\n                        open={open}\n                        onClose={handleClose}\n                        aria-labelledby=\"responsive-dialog-title\"\n                    >\n                        <DialogTitle id=\"responsive-dialog-title\">{\"AÇIKLAMA\"}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                {props.explanationOfChief}\n                                {/* {props.explanationOfGeneralManager}*/}\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button autoFocus onClick={handleClose} color=\"primary\">\n                                TAMAM\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                </div>\n            )\n        } else {\n            return (\n                <div style={{\n                    display: \"flex\",\n                    width: \"80px\",\n                    justifyContent: \"center\"\n                }}>\n                    <button style={{\n                        backgroundColor: \"rgb(253,131,1)\",\n                        fontSize: \"20px\",\n                        borderRadius: \"50%\",\n                        margin: \"auto\",\n                        textAlign: \"center\",\n                        width: \"40px\"\n                    }} onClick={handleClickOpen}\n                    >\n                        <h1 style={{fontSize: \"20px\", margin: \"auto\"}}>\n                            !\n                        </h1>\n                    </button>\n                    <Dialog\n                        fullScreen={fullScreen}\n                        open={open}\n                        onClose={handleClose}\n                        aria-labelledby=\"responsive-dialog-title\"\n                    >\n                        <DialogTitle id=\"responsive-dialog-title\">{\"AÇIKLAMA\"}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                {props.explanationOfChief}\n                                {/*{props.explanationOfGeneralManager}*/}\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button autoFocus onClick={handleCloseAndDeleteDemand} color=\"primary\">\n                                İPTAL ET\n                            </Button>\n                            <Link to=\"./FillingThePermissionForm\">\n                                <Button autoFocus color=\"primary\">\n                                    DÜZENLE\n                                </Button>\n                            </Link>\n                        </DialogActions>\n                    </Dialog>\n                </div>\n            )\n        }\n    }\n    else if (desParam===\"2\"){\n\n\n\n\n\n\n\n\n\n\n\n\n        \n    }\n}\n"]},"metadata":{},"sourceType":"module"}