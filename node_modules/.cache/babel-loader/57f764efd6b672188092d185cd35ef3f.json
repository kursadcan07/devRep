{"ast":null,"code":"var _jsxFileName = \"/home/can/IdeaProjects/devRep/src/PersonelScreens/StickyHeadTable.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from \"@material-ui/core/Button\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { trTR } from '@material-ui/core/locale';\nimport { Bounce } from \"react-reveal\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link } from \"react-router-dom\";\nimport ResponsiveDialog from \"./ResponsiveDialog\";\nimport Fab from \"@material-ui/core/Fab\";\n{\n  /*Here the main theme that specifies the local and background color.*/\n}\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#1976d2'\n    }\n  }\n}, trTR);\n{\n  /*Here the columns that are specifies the main tags of rows.*/\n}\nconst columns = [{\n  id: 'permissionID',\n  label: 'İzin ID'\n}, {\n  id: 'beginDateOfPermission',\n  label: 'İZİN BAŞLANGIÇ'\n}, {\n  id: 'endDateOfPermission',\n  label: 'İZİN BİTİŞ'\n}, {\n  id: 'chiefConfirmStatus',\n  label: 'AMİR ONAYI'\n}, {\n  id: 'generalManagerConfirmStatus',\n  label: 'GENEL MÜDÜR ONAYI'\n}\n/* {\n     id: 'displayScreen',\n     label: ' ÖNİZLEME',\n },*/\n];\n/* This function determines a button to monitor related permission in form*/\n\nfunction displayPermissionForm() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-start\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"DisplayPermissionForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      padding: \"1px\",\n      background: \"rgba(180,133,205,0.64)\",\n      borderRadius: \"50%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    size: \"small\",\n    style: {\n      color: \"rgba(22,22,22,1)\"\n    },\n    icon: require('./SystemImages/DisplayPermissionButtonIcon.svg'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }))));\n}\n\n{\n  /*Here the style definition for usage of varible classes*/\n}\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    width: \"100%\"\n  }\n});\n{\n  /*This const determines styles for bounce which displays buttons as animated */\n}\nconst stylesForBounce = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    textAlign: 'center',\n    padding: \"10px\",\n    background: \"rgba(139,133,133,0.21)\"\n  }\n}));\n{\n  /*\n     This function determines StickyHeadTable to display\n     related informations.\n  */\n}\nexport default function StickyHeadTable(props) {\n  /*\n  * Here the variables and states that are determined to decide style.\n  * */\n  const defineRootAndContainerProperties = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const defineStyleForBounce = stylesForBounce();\n  /*\n      This method created for page change in StickyHeadTable\n   */\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  /*\n  This method created for row per page change in StickyHeadTable\n   */\n\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  function DisplayTheRowOfForm() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: defineStyleForBounce.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        fontSize: \"20px\",\n        borderRadius: \"50%\",\n        backgroundColor: \"rgba(49,236,9,0.95)\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }, \"\\u2714\"), /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        fontSize: \"12px\",\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    }, \"ONAY\"))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: defineStyleForBounce.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        fontSize: \"20px\",\n        borderRadius: \"50%\",\n        backgroundColor: \"rgba(255,220,0,0.95)\",\n        textAlign: \"center\",\n        marginRight: \"10px\",\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 25\n      }\n    }, \"\\u2296\"), /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        fontSize: \"12px\",\n        textAlign: \"center\",\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }\n    }, \"BEKLEMEDE\"))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: defineStyleForBounce.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        fontSize: \"20px\",\n        borderRadius: \"50%\",\n        backgroundColor: \"rgba(220,16,16,0.95)\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    }, \"\\u2716\"), /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        fontSize: \"12px\",\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    }, \"RED\"))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: defineStyleForBounce.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        fontSize: \"20px\",\n        borderRadius: \"50%\",\n        backgroundColor: \"rgb(253,131,1)\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }\n    }, \"!\"), /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        fontSize: \"12px\",\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 25\n      }\n    }, \"REV\\u0130ZE\"))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      margin: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Bounce, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(DisplayTheRowOfForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: defineRootAndContainerProperties.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: defineRootAndContainerProperties.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 37\n    }\n  }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n    key: column.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 45\n    }\n  }, column.label)))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 33\n    }\n  }, props.rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    console.log(\"sdads\");\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.permissionID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 45\n      }\n    }, columns.map(column => {\n      const value = row[column.id];\n      return /*#__PURE__*/React.createElement(TableCell, {\n        key: column.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 57\n        }\n      }, value, column.id === \"chiefAcceptance\" && /*#__PURE__*/React.createElement(ResponsiveDialog, {\n        chiefStatus: row.chiefConfirmStatus,\n        explanationOfChief: row.chiefsDescription,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 61\n        }\n      }), column.id === \"generalManAcceptance\" && /*#__PURE__*/React.createElement(ResponsiveDialog, {\n        chiefStatus: row.generalManagerConfirmStatus,\n        explanationOfGeneralManager: row.generalManagerDescription,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 102\n        }\n      }), column.id === \"displayScreen\" && displayPermissionForm(row.userStatus));\n    }));\n  })))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: props.rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 25\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/can/IdeaProjects/devRep/src/PersonelScreens/StickyHeadTable.js"],"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Button","createMuiTheme","ThemeProvider","trTR","Bounce","Grid","Link","ResponsiveDialog","Fab","theme","palette","primary","main","columns","id","label","displayPermissionForm","display","justifyContent","padding","background","borderRadius","color","require","useStyles","root","width","container","stylesForBounce","flexGrow","paper","textAlign","StickyHeadTable","props","defineRootAndContainerProperties","page","setPage","useState","rowsPerPage","setRowsPerPage","defineStyleForBounce","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","DisplayTheRowOfForm","fontSize","backgroundColor","fontWeight","marginRight","marginLeft","margin","map","column","rows","slice","row","console","log","permissionID","chiefConfirmStatus","chiefsDescription","generalManagerConfirmStatus","generalManagerDescription","userStatus","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from \"@material-ui/core/Button\";\nimport {createMuiTheme, ThemeProvider} from '@material-ui/core/styles';\nimport {trTR} from '@material-ui/core/locale';\nimport {Bounce} from \"react-reveal\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Link} from \"react-router-dom\";\nimport ResponsiveDialog from \"./ResponsiveDialog\";\nimport Fab from \"@material-ui/core/Fab\";\n\n\n{/*Here the main theme that specifies the local and background color.*/\n}\nconst theme = createMuiTheme({\n    palette: {\n        primary: {main: '#1976d2'}\n    },\n\n}, trTR);\n\n{/*Here the columns that are specifies the main tags of rows.*/\n}\nconst columns = [\n    {\n        id: 'permissionID',\n        label: 'İzin ID'\n    },\n    {\n        id: 'beginDateOfPermission',\n        label: 'İZİN BAŞLANGIÇ',\n    },\n    {\n        id: 'endDateOfPermission',\n        label: 'İZİN BİTİŞ',\n    },\n    {\n        id: 'chiefConfirmStatus',\n        label: 'AMİR ONAYI',\n    },\n    {\n        id: 'generalManagerConfirmStatus',\n        label: 'GENEL MÜDÜR ONAYI',\n    },\n    /* {\n         id: 'displayScreen',\n         label: ' ÖNİZLEME',\n     },*/\n];\n\n/* This function determines a button to monitor related permission in form*/\nfunction displayPermissionForm() {\n    return (\n        <div style={{\n            display: \"flex\",\n            justifyContent: \"flex-start\"\n        }}>\n            <Link to=\"DisplayPermissionForm\">\n                <Button variant=\"outlined\" color=\"primary\" style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-start\",\n                    padding: \"1px\",\n                    background: \"rgba(180,133,205,0.64)\",\n                    borderRadius: \"50%\"\n                }}>\n                    <Fab size=\"small\" style={{color:\"rgba(22,22,22,1)\"}} icon={require('./SystemImages/DisplayPermissionButtonIcon.svg')}>\n\n                    </Fab>\n                    {/*<img style={{width: \"30px\", height: \"20px\", margin: \"auto\"}}\n                         src={require('./SystemImages/DisplayPermissionButtonIcon.svg')}\n                         alt=\"my image\"/>*/}\n                </Button>\n            </Link>\n        </div>\n    )\n}\n\n{/*Here the style definition for usage of varible classes*/\n}\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n    },\n    container: {\n        width: \"100%\",\n    },\n});\n\n{\n    /*This const determines styles for bounce which displays buttons as animated */\n}\nconst stylesForBounce = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        textAlign: 'center',\n        padding: \"10px\",\n        background: \"rgba(139,133,133,0.21)\"\n    },\n}));\n{/*\n    This function determines StickyHeadTable to display\n    related informations.\n*/\n}\nexport default function StickyHeadTable (props){\n    /*\n    * Here the variables and states that are determined to decide style.\n    * */\n    const defineRootAndContainerProperties = useStyles();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const defineStyleForBounce = stylesForBounce();\n\n    /*\n        This method created for page change in StickyHeadTable\n     */\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n    /*\n    This method created for row per page change in StickyHeadTable\n     */\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    function DisplayTheRowOfForm() {\n\n        return (\n            <React.Fragment>\n                {/* First Grid defined here */}\n                <Grid item xs={3}>\n                    <Paper className={defineStyleForBounce.paper}>\n                        <h1 style={{\n                            fontSize: \"20px\",\n                            borderRadius: \"50%\",\n                            backgroundColor: \"rgba(49,236,9,0.95)\",\n                            textAlign: \"center\"\n                        }}>\n                            ✔\n                        </h1>\n                        <h1 style={{\n                            fontSize: \"12px\",\n                            fontWeight: \"bold\",\n                            textAlign: \"center\"\n                        }}\n                        >\n                            ONAY\n                        </h1>\n                    </Paper>\n                </Grid>\n                <Grid item xs={4}>\n                    <Paper className={defineStyleForBounce.paper}>\n\n                        <h1 style={{\n                            fontSize: \"20px\",\n                            borderRadius: \"50%\",\n                            backgroundColor: \"rgba(255,220,0,0.95)\",\n                            textAlign: \"center\",\n                            marginRight: \"10px\",\n                            marginLeft: \"10px\"\n                        }}>\n                            ⊖\n                        </h1>\n                        <h1 style={{fontSize: \"12px\", textAlign: \"center\", fontWeight: \"bold\"}}\n                        >\n                            BEKLEMEDE\n                        </h1>\n                    </Paper>\n                </Grid>\n                <Grid item xs={2}>\n                    <Paper className={defineStyleForBounce.paper}>\n                        <h1 style={{\n                            fontSize: \"20px\",\n                            borderRadius: \"50%\",\n                            backgroundColor: \"rgba(220,16,16,0.95)\",\n                            textAlign: \"center\"\n                        }}>\n                            ✖\n                        </h1>\n                        <h1 style={{\n                            fontSize: \"12px\",\n                            fontWeight: \"bold\",\n                            textAlign: \"center\"\n                        }}\n                        >\n                            RED\n                        </h1>\n                    </Paper>\n                </Grid>\n                <Grid item xs={3}>\n                    <Paper className={defineStyleForBounce.paper}>\n                        <h1 style={{\n                            fontSize: \"20px\",\n                            borderRadius: \"50%\",\n                            backgroundColor: \"rgb(253,131,1)\",\n                            textAlign: \"center\"\n                        }}>\n                            !\n                        </h1>\n                        <h1 style={{\n                            fontSize: \"12px\",\n                            fontWeight: \"bold\",\n                            textAlign: \"center\"\n                        }}\n                        >\n                            REVİZE\n                        </h1>\n\n                    </Paper>\n                </Grid>\n            </React.Fragment>\n        );\n    }\n    return (\n            <div>\n                <div style={{display: \"flex\", justifyContent: \"flex-end\", margin: \"5px\"}}>\n                    <Bounce>\n                        <Grid container item xs={12} spacing={1}>\n                            <DisplayTheRowOfForm/>\n                        </Grid>\n                    </Bounce>\n                </div>\n                <ThemeProvider theme={theme}>\n                    <Paper className={defineRootAndContainerProperties.root}>\n                        <TableContainer className={defineRootAndContainerProperties.container}>\n                            <Table stickyHeader aria-label=\"sticky table\">\n                                <TableHead>\n                                    <TableRow>\n                                        {columns.map((column) => (\n                                            <TableCell\n                                                key={column.id}\n                                            >\n                                                {column.label}\n                                            </TableCell>\n                                        ))}\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {props.rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                                        console.log(\"sdads\")\n                                        return (\n                                            <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.permissionID}>\n                                                {columns.map((column) => {\n                                                    const value = row[column.id];\n                                                    return (\n                                                        <TableCell key={column.id}>\n                                                            {value}\n                                                            {column.id === \"chiefAcceptance\" &&\n                                                            <ResponsiveDialog chiefStatus={row.chiefConfirmStatus}\n                                                                              explanationOfChief={row.chiefsDescription}/>}\n                                                            {column.id === \"generalManAcceptance\" && <ResponsiveDialog\n                                                                chiefStatus={row.generalManagerConfirmStatus}\n                                                                explanationOfGeneralManager={row.generalManagerDescription}/>}\n                                                            {column.id === \"displayScreen\" && displayPermissionForm(row.userStatus)}\n                                                        </TableCell>\n                                                    );\n                                                })}\n                                            </TableRow>\n                                        );\n                                    })}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                        <TablePagination\n                            rowsPerPageOptions={[10, 25, 100]}\n                            component=\"div\"\n                            count={props.rows.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            onChangePage={handleChangePage}\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\n                        />\n                    </Paper>\n                </ThemeProvider>\n            </div>\n        )\n}\n"]},"metadata":{},"sourceType":"module"}