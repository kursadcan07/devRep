{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kursa\\\\IdeaProjects\\\\devRep\\\\src\\\\PersonelScreens\\\\ResponsiveDialog.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Fab from \"@material-ui/core/Fab\";\nexport default function ResponsiveDialog(props) {\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCloseAndDeleteDemand = () => {\n    setOpen(false); //HERE WE DELETE THE DEMAND OF PERMISSION.\n  };\n\n  if (props.chiefConfirmStatus === 1 || props.generalManagerConfirmStatus === 1) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        width: \"80px\",\n        justifyContent: \"center\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      style: {\n        backgroundColor: \"rgba(49,236,9,0.95)\",\n        fontSize: \"20px\",\n        borderRadius: \"50%\",\n        margin: \"auto\",\n        textAlign: \"center\",\n        height: \"30px\",\n        width: \"30px\"\n      },\n      onClick: handleClickOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, \"\\u2714\"), /*#__PURE__*/React.createElement(Dialog, {\n      fullScreen: fullScreen,\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"responsive-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"responsive-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, \"AÇIKLAMA\"), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DialogContentText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, props.desParam === 1 ? props.explanationOfChief : props.explanationOfGeneralManager)), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      autoFocus: true,\n      onClick: handleClose,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }, \"TAMAM\"))));\n  } else if (props.chiefConfirmStatus === 2 || props.generalManagerConfirmStatus === 2) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        width: \"80px\",\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      style: {\n        backgroundColor: \"rgba(220,16,16,0.95)\",\n        borderRadius: \"50%\",\n        margin: \"auto\",\n        textAlign: \"center\",\n        display: 'flex',\n        height: \"30px\",\n        width: \"30px\"\n      },\n      onClick: handleClickOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        fontSize: \"20px\",\n        margin: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, \"\\u2716\")), /*#__PURE__*/React.createElement(Dialog, {\n      fullScreen: fullScreen,\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"responsive-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"responsive-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, \"AÇIKLAMA\"), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DialogContentText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, props.desParam === 1 ? props.explanationOfChief : props.explanationOfGeneralManager)), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      autoFocus: true,\n      onClick: handleClose,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, \"TAMAM\"))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        width: \"80px\",\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      style: {\n        backgroundColor: \"rgba(255,220,0,0.95)\",\n        fontSize: \"20px\",\n        borderRadius: \"50%\",\n        margin: \"auto\",\n        textAlign: \"center\",\n        height: \"30px\",\n        width: \"30px\"\n      },\n      onClick: handleClickOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        fontSize: \"20px\",\n        margin: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, \"\\u2296\")), /*#__PURE__*/React.createElement(Dialog, {\n      fullScreen: fullScreen,\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"responsive-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"responsive-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, \"AÇIKLAMA\"), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DialogContentText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, props.desParam === 1 ? props.explanationOfChief : props.explanationOfGeneralManager)), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      autoFocus: true,\n      onClick: handleClose,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }, \"TAMAM\"))));\n  }\n}","map":{"version":3,"sources":["C:/Users/kursa/IdeaProjects/devRep/src/PersonelScreens/ResponsiveDialog.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","useTheme","Fab","ResponsiveDialog","props","open","setOpen","useState","theme","fullScreen","breakpoints","down","handleClickOpen","handleClose","handleCloseAndDeleteDemand","chiefConfirmStatus","generalManagerConfirmStatus","display","width","justifyContent","textAlign","backgroundColor","fontSize","borderRadius","margin","height","desParam","explanationOfChief","explanationOfGeneralManager"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport {useTheme} from '@material-ui/core/styles';\r\nimport Fab from \"@material-ui/core/Fab\";\r\n\r\nexport default function ResponsiveDialog(props) {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleCloseAndDeleteDemand = () => {\r\n        setOpen(false);\r\n        //HERE WE DELETE THE DEMAND OF PERMISSION.\r\n    };\r\n\r\n\r\n    if (props.chiefConfirmStatus === 1 || props.generalManagerConfirmStatus === 1) {\r\n\r\n        return (\r\n            <div style={{\r\n                display: \"flex\", width: \"80px\", justifyContent: \"center\",\r\n                textAlign: \"center\"\r\n\r\n            }}>\r\n\r\n                <Fab style={{\r\n                    backgroundColor: \"rgba(49,236,9,0.95)\",\r\n                    fontSize: \"20px\",\r\n                    borderRadius: \"50%\",\r\n                    margin: \"auto\",\r\n                    textAlign: \"center\",\r\n                    height: \"30px\",\r\n                    width: \"30px\"\r\n                }}\r\n                     onClick={handleClickOpen}>\r\n                    ✔\r\n                </Fab>\r\n                <Dialog\r\n                    fullScreen={fullScreen}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"responsive-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"responsive-dialog-title\">{\"AÇIKLAMA\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            {props.desParam === 1 ? props.explanationOfChief : props.explanationOfGeneralManager}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button autoFocus onClick={handleClose} color=\"primary\">\r\n                            TAMAM\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    } else if (props.chiefConfirmStatus === 2 || props.generalManagerConfirmStatus === 2) {\r\n        return (\r\n            <div style={{\r\n                display: \"flex\", width: \"80px\", justifyContent: \"center\"\r\n            }}>\r\n                <Fab style={{\r\n                    backgroundColor: \"rgba(220,16,16,0.95)\",\r\n                    borderRadius: \"50%\",\r\n                    margin: \"auto\",\r\n                    textAlign: \"center\",\r\n                    display: 'flex',\r\n                    height: \"30px\",\r\n                    width: \"30px\"\r\n                }} onClick={handleClickOpen}>\r\n                    <h1 style={{fontSize: \"20px\", margin: \"auto\"}}>\r\n                        ✖\r\n                    </h1>\r\n\r\n                </Fab>\r\n                <Dialog\r\n                    fullScreen={fullScreen}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"responsive-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"responsive-dialog-title\">{\"AÇIKLAMA\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            {props.desParam === 1 ? props.explanationOfChief : props.explanationOfGeneralManager}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button autoFocus onClick={handleClose} color=\"primary\">\r\n                            TAMAM\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    } else{\r\n        return (\r\n            <div style={{\r\n                display: \"flex\",\r\n                width: \"80px\",\r\n                justifyContent: \"center\"\r\n            }}>\r\n                <Fab style={{\r\n                    backgroundColor: \"rgba(255,220,0,0.95)\",\r\n                    fontSize: \"20px\",\r\n                    borderRadius: \"50%\",\r\n                    margin: \"auto\",\r\n                    textAlign: \"center\",\r\n                    height: \"30px\",\r\n                    width: \"30px\"\r\n                }} onClick={handleClickOpen}\r\n                >\r\n                    <h1 style={{fontSize: \"20px\", margin: \"auto\"}}>\r\n                        ⊖\r\n                    </h1>\r\n                </Fab>\r\n                <Dialog\r\n                    fullScreen={fullScreen}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"responsive-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"responsive-dialog-title\">{\"AÇIKLAMA\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            {props.desParam === 1 ? props.explanationOfChief : props.explanationOfGeneralManager}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button autoFocus onClick={handleClose} color=\"primary\">\r\n                            TAMAM\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}